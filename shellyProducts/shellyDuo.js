import { ShellyLight, Colors } from './shellyLight.js'

export const POWER_VALUES = ['off', 'on']
export const POWER_ACTIONS = ['off', 'on', 'toggle']

export var Options = {
	selectPower:  {
		type: 'dropdown',
		label: 'Power Status',
		id: 'power',
		default: 'on',
		choices: POWER_VALUES.map((label) => ({ id: label, label }))
	},
	selectPowerAction:  {
		type: 'dropdown',
		label: 'Power Action',
		id: 'powerAction',
		default: POWER_ACTIONS[2],
		choices: POWER_ACTIONS.map((label) => ({ id: label, label }))
	},
	textInput: {
		type: 'textinput',
		label: 'Text',
		id: 'text',
		default: ''
	},
	foregroundColor:  {
		type: 'colorpicker',
		label: 'Foreground color',
		id: 'fg',
		default: Colors.white
	},
	backgroundColor:  {
		type: 'colorpicker',
		label: 'Background color',
		id: 'bg',
		default: Colors.green
	},
	selectBrightness:  {
		type: 'number',
		label: 'Brightness [%]',
		id: 'brightness',
		min: 0,
		max: 100,
		default: 50,
		required: true,
		range: true
	},
	selectBrightnessDelta:  {
		type: 'number',
		label: 'Brightness Delta [%]',
		id: 'brightnessDelta',
		min: -25,
		max: 25,
		default: 5,
		required: true,
		range: true
	},
	selectColorTemperature2700: {
		type: 'number',
		label: 'Color Temperature [K]',
		id: 'colorTemperature',
		min: 2700,
		max: 6500,
		default: 4000,
		required: true,
		range: true
	},
	selectColorTemperatureDelta:  {
		type: 'number',
		label: 'Color Temperature Delta [K]',
		id: 'colorTempDelta',
		min: -200,
		max: 200,
		default: 100,
		required: true,
		range: true
	},
	selectBrightnessLowFg: {
		type: 'colorpicker',
		label: 'Foreground Color Brightness Level Low < 25 [%]',
		id: 'fgLowBrightness',
		default: Colors.white
	},
	selectBrightnessLowBg:  {
		type: 'colorpicker',
		label: 'Background Color Brightness Level Low < 25 [%]',
		id: 'bgLowBrightness',
		default: 0x222222
	},
	selectBrightnessMiddleFg:  {
		type: 'colorpicker',
		label: 'Foreground Color Brightness Level Middle 25 >= x <= 75 [%]',
		id: 'fgMiddleBrightness',
		default: Colors.white
	},
	selectBrightnessMiddleBg:  {
		type: 'colorpicker',
		label: 'Background Color Brightness Level Middle 25 >= x <= 75 [%]',
		id: 'bgMiddleBrightness',
		default: 0x999999
	},
	selectBrightnessHighFg:  {
		type: 'colorpicker',
		label: 'Foreground Color Brightness Level High > 75 [%]',
		id: 'fgHighBrightness',
		default: Colors.black
	},
	selectBrightnessHighBg:  {
		type: 'colorpicker',
		label: 'Background Color Brightness Level High > 75 [%]',
		id: 'bgHighBrightness',
		default: 0xdddddd
	},
	colorTempWarmWhiteFg:  {
		type: 'colorpicker',
		label: 'Foreground Color Warm White < 3300 [K]',
		id: 'fgWarmWhite',
		default: Colors.black
	},
	colorTempWarmWhiteBg:  {
		type: 'colorpicker',
		label: 'Background Color Warm White < 3300 [K]',
		id: 'bgWarmWhite',
		default: Colors.warmWhite
	},
	colorTempNeutralWhiteFg:  {
		type: 'colorpicker',
		label: 'Foreground Color Neutral White 3300 >= x <= 5300 [K]',
		id: 'fgNeutralWhite',
		default: Colors.black
	},
	colorTempNeutralWhiteBg:  {
		type: 'colorpicker',
		label: 'Background Color Neutral White 3300 >= x <= 5300 [K]',
		id: 'bgNeutralWhite',
		default: Colors.neutralWhite
	},
	colorTempColdWhiteFg:  {
		type: 'colorpicker',
		label: 'Foreground Color Cold White > 5300 [K]',
		id: 'fgColdWhite',
		default: Colors.black
	},
	colorTempColdWhiteBg:  {
		type: 'colorpicker',
		label: 'Background Color Cold White > 5300 [K]',
		id: 'bgColdWhite',
		default: Colors.coldWhite
	},
}

export class ShellyDuo extends ShellyLight {
	static powerValue(powerState) {
		return POWER_VALUES[(powerState == true) ? 1 : 0]
	}
	static actions = {
		power: {
			name: 'Power',
			options: [Options.selectPowerAction],
			callback: async (action, context) => {
				this.setPowerState(0, action.options.powerAction);
			}
		},
		brightness: {
			name: 'Brightness',
			options: [Options.selectBrightness],
			callback: async (action, context) => {
				this.setWhiteBrightness(0, action.options.brightness);
			},
			learn: (action) => {
				return {
					brightness: this.getBrightness(0)
				}
			}
		},
		brightnessChange: {
			name: 'Increase/Decrease Brightness',
			options: [Options.selectBrightnessDelta],
			callback: async (action, context) => {
				this.changeWhiteBrightness(0, action.options.brightnessDelta);
			}
		},
		colorTemperature: {
			name: 'Color Temperature',
			options: [Options.selectColorTemperature2700],
			callback: async (action, context) => {
				this.setColorTemperature(0, action.options.colorTemperature);
			},
			learn: (action) => {
				return {
					colorTemperature: this.getColorTemperature(0)
				}
			}
		},
		colorTemperatureChange: {
			name: 'Increase/Decrease Color Temperature',
			options: [Options.selectColorTemperatureDelta],
			callback: async (action, context) => {
				this.changeColorTemperature(0, action.options.colorTempDelta, 2700, 6500);
			}
		},
		light: {
			name: 'Light',
			options: [
				Options.selectPower,
				Options.selectColorTemperature2700,
				Options.selectBrightness],
			callback: async (action, context) => {
				this.setWhiteLight(0,
					action.options.power,
					action.options.colorTemperature,
					action.options.brightness);
			},
			learn: (action) => {
				const light = this.getWhiteLight(0);
				return {
					power: light.power,
					colorTemperature: light.colorTemperature,
					brightness: light.brightness
				}
			}
		}
	}
	static feedbacks = {
		power: {
			type: 'advanced',
			name: 'Power Status',
			description: 'When light power status changes, change colors of the bank',
			options: [Options.selectPower, Options.textInput, Options.foregroundColor, Options.backgroundColor],
			callback: (feedback, context) => {
				if (feedback.options.power == this.powerValue(this.getPowerState(0))) {
					return { text: feedback.options.text, color: feedback.options.fg, bgcolor: feedback.options.bg };
				}
			}
		},
		brightness: {
			type: 'advanced',
			name: 'Brightness',
			description: 'When brightness changes, change colors of the bank',
			options: [
				Options.selectBrightnessLowFg, Options.selectBrightnessLowBg,
				Options.selectBrightnessMiddleFg, Options.selectBrightnessMiddleBg,
				Options.selectBrightnessHighFg, Options.selectBrightnessHighBg],
			callback: (feedback, context) => {
				if (this.getWhiteBrightness(0) < 25) {
					return {
						color: feedback.options.fgLowBrightness,
						bgcolor: feedback.options.bgLowBrightness
					}
				} else if (this.getWhiteBrightness(0) > 75) {
					return {
						color: feedback.options.fgHighBrightness,
						bgcolor: feedback.options.bgHighBrightness
					}
				} else {
					return {
						color: feedback.options.fgMiddleBrightness,
						bgcolor: feedback.options.bgMiddleBrightness
					}
				}
			}
		},
		colorTemperature: {
			type: 'advanced',
			name: 'Color Temperature',
			description: 'When Color Temperature changes, change colors of the bank',
			options: [
				Options.colorTempWarmWhiteFg, Options.colorTempWarmWhiteBg,
				Options.colorTempNeutralWhiteFg, Options.colorTempNeutralWhiteBg,
				Options.colorTempColdWhiteFg, Options.colorTempColdWhiteBg],
			callback: (feedback, context) => {
				if (this.getColorTemperature(0) < 3300) {
					return {
						color: feedback.options.fgWarmWhite,
						bgcolor: feedback.options.bgWarmWhite
					}
				} else if (this.getColorTemperature(0) > 5300) {
					return {
						color: feedback.options.fgColdWhite,
						bgcolor: feedback.options.bgColdWhite
					}
				} else {
					return {
						color: feedback.options.fgNeutralWhite,
						bgcolor: feedback.options.bgNeutralWhite
					}
				}
			}
		},
		light: {
			type: 'static-text',
			name: 'Light Info',
			description: 'Change text of the bank to the current light values',
			options: [],
			callback: (feedback, context) => {
				return 'duo=' + this.lightText();
			}
		},
	}
	static variables() {
		let varList = [
			{ variableId: 'power', name: 'Power Status' },
			{ variableId: 'powerConsumption', name: 'Power Consumption' },
			{ variableId: 'totalPowerConsumption', name: 'Total Power Consumption' },
			{ variableId: 'brightness', name: 'Brightness' },
			{ variableId: 'colorTemperature', name: 'Color Temperature' },
			{ variableId: 'light', name: 'Light' },
		];
		return varList;
	}
	static updateVariables(instance) {
		instance.setVariableValues({
			'power': this.powerValue(this.getPowerState(0)),
			'powerConsumption': this.getPowerConsumption(0),
			'totalPowerConsumption': this.getTotalPowerConsumption(0),
			'brightness': this.getWhiteBrightness(0),
			'colorTemperature': this.getColorTemperature(0)
		})
	}


/*	static presets() {
		let presets = {}

		const ColorWhite = combineRgb(255, 255, 255)
		const ColorBlack = combineRgb(0, 0, 0)
		const ColorRed = combineRgb(255, 0, 0)
		const ColorGreen = combineRgb(0, 204, 0)
		const ColorYellow = combineRgb(255, 255, 0)
		const ColorBlue = combineRgb(0, 51, 204)
		const ColorPurple = combineRgb(255, 0, 255)

		presets['powerToggle'] = {
			type: 'button',
			category: 'General',
			name: 'Power Toggle',
			style: {
				text: 'on',
				size: '14',
				alignment: 'center:bottom',
				color: ColorWhite,
				bgcolor: ColorBlack,
				png64: "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/GMzLdsAAEOOaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA2LjAtYzAwMyAxMTYuYTM2MDg3MiwgMjAyMS8wOC8wMi0wOTo1NTo0NyAgICAgICAgIj4KICAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICAgICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAgICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICAgICAgICAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICAgICAgICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgICAgICAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgICAgICAgICB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIKICAgICAgICAgICAgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgICAgICAgICAgeG1sbnM6ZXhpZj0iaHR0cDovL25zLmFkb2JlLmNvbS9leGlmLzEuMC8iPgogICAgICAgICA8eG1wOkNyZWF0b3JUb29sPkFkb2JlIFBob3Rvc2hvcCBFbGVtZW50cyAxOS4wIChXaW5kb3dzKTwveG1wOkNyZWF0b3JUb29sPgogICAgICAgICA8eG1wOkNyZWF0ZURhdGU+MjAyMi0wNS0wMlQyMTo0Mjo1MiswMjowMDwveG1wOkNyZWF0ZURhdGU+CiAgICAgICAgIDx4bXA6TWV0YWRhdGFEYXRlPjIwMjMtMTItMTBUMDg6MTk6MDIrMDE6MDA8L3htcDpNZXRhZGF0YURhdGU+CiAgICAgICAgIDx4bXA6TW9kaWZ5RGF0ZT4yMDIzLTEyLTEwVDA4OjE5OjAyKzAxOjAwPC94bXA6TW9kaWZ5RGF0ZT4KICAgICAgICAgPGRjOmZvcm1hdD5pbWFnZS9wbmc8L2RjOmZvcm1hdD4KICAgICAgICAgPHhtcE1NOkluc3RhbmNlSUQ+eG1wLmlpZDpjYjFmMzk2NC1mYmZjLTEzNGYtOGQ3MC0xZGViZGNiZGRiMDk8L3htcE1NOkluc3RhbmNlSUQ+CiAgICAgICAgIDx4bXBNTTpEb2N1bWVudElEPmFkb2JlOmRvY2lkOnBob3Rvc2hvcDo0N2VhYzcxZC05NzJjLTExZWUtYWE1OC04ODAwNmMwZDg1Yzc8L3htcE1NOkRvY3VtZW50SUQ+CiAgICAgICAgIDx4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ+eG1wLmRpZDo4MWYzMmIzMS00NTI3LTA3NDctYjA0OC00NWY2ZjAwNzA0MTY8L3htcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD4KICAgICAgICAgPHhtcE1NOkhpc3Rvcnk+CiAgICAgICAgICAgIDxyZGY6U2VxPgogICAgICAgICAgICAgICA8cmRmOmxpIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OmFjdGlvbj5jcmVhdGVkPC9zdEV2dDphY3Rpb24+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDppbnN0YW5jZUlEPnhtcC5paWQ6ODFmMzJiMzEtNDUyNy0wNzQ3LWIwNDgtNDVmNmYwMDcwNDE2PC9zdEV2dDppbnN0YW5jZUlEPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6d2hlbj4yMDIyLTA1LTAyVDIxOjQyOjUyKzAyOjAwPC9zdEV2dDp3aGVuPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6c29mdHdhcmVBZ2VudD5BZG9iZSBQaG90b3Nob3AgRWxlbWVudHMgMTkuMCAoV2luZG93cyk8L3N0RXZ0OnNvZnR3YXJlQWdlbnQ+CiAgICAgICAgICAgICAgIDwvcmRmOmxpPgogICAgICAgICAgICAgICA8cmRmOmxpIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OmFjdGlvbj5zYXZlZDwvc3RFdnQ6YWN0aW9uPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6aW5zdGFuY2VJRD54bXAuaWlkOjZhYjgyMzRhLWZkYWMtZTY0MC05OTkxLWE5NDhlMTQyODFlNjwvc3RFdnQ6aW5zdGFuY2VJRD4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OndoZW4+MjAyMi0wNS0wMlQyMTo0NDo1MiswMjowMDwvc3RFdnQ6d2hlbj4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OnNvZnR3YXJlQWdlbnQ+QWRvYmUgUGhvdG9zaG9wIEVsZW1lbnRzIDE5LjAgKFdpbmRvd3MpPC9zdEV2dDpzb2Z0d2FyZUFnZW50PgogICAgICAgICAgICAgICAgICA8c3RFdnQ6Y2hhbmdlZD4vPC9zdEV2dDpjaGFuZ2VkPgogICAgICAgICAgICAgICA8L3JkZjpsaT4KICAgICAgICAgICAgICAgPHJkZjpsaSByZGY6cGFyc2VUeXBlPSJSZXNvdXJjZSI+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDphY3Rpb24+c2F2ZWQ8L3N0RXZ0OmFjdGlvbj4KICAgICAgICAgICAgICAgICAgPHN0RXZ0Omluc3RhbmNlSUQ+eG1wLmlpZDo5NGEwOTFiMC04MWZjLTFkNGItYTg3YS1jN2EwZjFkNTEwZWY8L3N0RXZ0Omluc3RhbmNlSUQ+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDp3aGVuPjIwMjMtMTItMTBUMDg6MTk6MDIrMDE6MDA8L3N0RXZ0OndoZW4+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDpzb2Z0d2FyZUFnZW50PkFkb2JlIFBob3Rvc2hvcCBFbGVtZW50cyAxOS4wIChXaW5kb3dzKTwvc3RFdnQ6c29mdHdhcmVBZ2VudD4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OmNoYW5nZWQ+Lzwvc3RFdnQ6Y2hhbmdlZD4KICAgICAgICAgICAgICAgPC9yZGY6bGk+CiAgICAgICAgICAgICAgIDxyZGY6bGkgcmRmOnBhcnNlVHlwZT0iUmVzb3VyY2UiPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6YWN0aW9uPmNvbnZlcnRlZDwvc3RFdnQ6YWN0aW9uPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6cGFyYW1ldGVycz5mcm9tIGFwcGxpY2F0aW9uL3ZuZC5hZG9iZS5waG90b3Nob3AgdG8gaW1hZ2UvcG5nPC9zdEV2dDpwYXJhbWV0ZXJzPgogICAgICAgICAgICAgICA8L3JkZjpsaT4KICAgICAgICAgICAgICAgPHJkZjpsaSByZGY6cGFyc2VUeXBlPSJSZXNvdXJjZSI+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDphY3Rpb24+ZGVyaXZlZDwvc3RFdnQ6YWN0aW9uPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6cGFyYW1ldGVycz5jb252ZXJ0ZWQgZnJvbSBhcHBsaWNhdGlvbi92bmQuYWRvYmUucGhvdG9zaG9wIHRvIGltYWdlL3BuZzwvc3RFdnQ6cGFyYW1ldGVycz4KICAgICAgICAgICAgICAgPC9yZGY6bGk+CiAgICAgICAgICAgICAgIDxyZGY6bGkgcmRmOnBhcnNlVHlwZT0iUmVzb3VyY2UiPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6YWN0aW9uPnNhdmVkPC9zdEV2dDphY3Rpb24+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDppbnN0YW5jZUlEPnhtcC5paWQ6Y2IxZjM5NjQtZmJmYy0xMzRmLThkNzAtMWRlYmRjYmRkYjA5PC9zdEV2dDppbnN0YW5jZUlEPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6d2hlbj4yMDIzLTEyLTEwVDA4OjE5OjAyKzAxOjAwPC9zdEV2dDp3aGVuPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6c29mdHdhcmVBZ2VudD5BZG9iZSBQaG90b3Nob3AgRWxlbWVudHMgMTkuMCAoV2luZG93cyk8L3N0RXZ0OnNvZnR3YXJlQWdlbnQ+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDpjaGFuZ2VkPi88L3N0RXZ0OmNoYW5nZWQ+CiAgICAgICAgICAgICAgIDwvcmRmOmxpPgogICAgICAgICAgICA8L3JkZjpTZXE+CiAgICAgICAgIDwveG1wTU06SGlzdG9yeT4KICAgICAgICAgPHhtcE1NOkRlcml2ZWRGcm9tIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAgICAgPHN0UmVmOmluc3RhbmNlSUQ+eG1wLmlpZDo5NGEwOTFiMC04MWZjLTFkNGItYTg3YS1jN2EwZjFkNTEwZWY8L3N0UmVmOmluc3RhbmNlSUQ+CiAgICAgICAgICAgIDxzdFJlZjpkb2N1bWVudElEPmFkb2JlOmRvY2lkOnBob3Rvc2hvcDplZGY2ZmIxZC1kNmVjLTExZWMtYjU3OC1jNjExMzkyNWY4NGI8L3N0UmVmOmRvY3VtZW50SUQ+CiAgICAgICAgICAgIDxzdFJlZjpvcmlnaW5hbERvY3VtZW50SUQ+eG1wLmRpZDo4MWYzMmIzMS00NTI3LTA3NDctYjA0OC00NWY2ZjAwNzA0MTY8L3N0UmVmOm9yaWdpbmFsRG9jdW1lbnRJRD4KICAgICAgICAgPC94bXBNTTpEZXJpdmVkRnJvbT4KICAgICAgICAgPHBob3Rvc2hvcDpDb2xvck1vZGU+MzwvcGhvdG9zaG9wOkNvbG9yTW9kZT4KICAgICAgICAgPHBob3Rvc2hvcDpJQ0NQcm9maWxlPnNSR0IgSUVDNjE5NjYtMi4xPC9waG90b3Nob3A6SUNDUHJvZmlsZT4KICAgICAgICAgPHBob3Rvc2hvcDpUZXh0TGF5ZXJzPgogICAgICAgICAgICA8cmRmOkJhZz4KICAgICAgICAgICAgICAgPHJkZjpsaSByZGY6cGFyc2VUeXBlPSJSZXNvdXJjZSI+CiAgICAgICAgICAgICAgICAgIDxwaG90b3Nob3A6TGF5ZXJOYW1lPmJsdXI8L3Bob3Rvc2hvcDpMYXllck5hbWU+CiAgICAgICAgICAgICAgICAgIDxwaG90b3Nob3A6TGF5ZXJUZXh0PmJsdXI8L3Bob3Rvc2hvcDpMYXllclRleHQ+CiAgICAgICAgICAgICAgIDwvcmRmOmxpPgogICAgICAgICAgICA8L3JkZjpCYWc+CiAgICAgICAgIDwvcGhvdG9zaG9wOlRleHRMYXllcnM+CiAgICAgICAgIDxwaG90b3Nob3A6RG9jdW1lbnRBbmNlc3RvcnM+CiAgICAgICAgICAgIDxyZGY6QmFnPgogICAgICAgICAgICAgICA8cmRmOmxpPmFkb2JlOmRvY2lkOnBob3Rvc2hvcDpmZTgyMzAzMS1jYTE0LTExZWMtYWI3Mi1jNWU5Mjg3Yzg1ODg8L3JkZjpsaT4KICAgICAgICAgICAgPC9yZGY6QmFnPgogICAgICAgICA8L3Bob3Rvc2hvcDpEb2N1bWVudEFuY2VzdG9ycz4KICAgICAgICAgPHRpZmY6T3JpZW50YXRpb24+MTwvdGlmZjpPcmllbnRhdGlvbj4KICAgICAgICAgPHRpZmY6WFJlc29sdXRpb24+MTE4MTEwMi8xMDAwMDwvdGlmZjpYUmVzb2x1dGlvbj4KICAgICAgICAgPHRpZmY6WVJlc29sdXRpb24+MTE4MTEwMi8xMDAwMDwvdGlmZjpZUmVzb2x1dGlvbj4KICAgICAgICAgPHRpZmY6UmVzb2x1dGlvblVuaXQ+MzwvdGlmZjpSZXNvbHV0aW9uVW5pdD4KICAgICAgICAgPGV4aWY6Q29sb3JTcGFjZT4xPC9leGlmOkNvbG9yU3BhY2U+CiAgICAgICAgIDxleGlmOlBpeGVsWERpbWVuc2lvbj43MjwvZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgICAgICAgIDxleGlmOlBpeGVsWURpbWVuc2lvbj43MjwvZXhpZjpQaXhlbFlEaW1lbnNpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+KSQJ9QAAACBjSFJNAAB6JQAAgIMAAPn/AACA6AAAdTAAAOpgAAA6lwAAF2+XqZnUAAAHOklEQVR42uybTWwcZxnHf8/7zn44a3utQvNlIFHbNEVICAUcpRVGIeUAFUIgkKgioAdOhR6AC+JQ4IzaG+JQCamlNFAJkapWU6cQ0kRUShSXiMRBSS0Mjh01tuL11653Z3fe9+Ews+u1lUrlshut55FejT0z0r7+7f/5nLEASmofaCZFkAJKAaWAUkApoBRQCigFlFoKKAWUAkoB3WsWdPPDR0c/z5EjIzz11JMUhwapu4Ca7yNyQmWlxNS/rvKHE79j/M3xrkLSTq/h4WF94YVf69ratIbhjNZqN7W8Pqt3lud1rlTW2VJd55YaeqvU0NvLDT311hkdHR3VbuxV6PA8aP/+/YyNvcLDB/YCAmIAg/OGWj0gdHmUHIhBmt+fwHp5mR98/3ucPj3euzHowIEDjL3+Mg8f2ANqQC14C2owGKwBgwc8ggdxGFEMSn9/kd/89vc8/viXOgqoYwoqFoucP/8mjxzcHcPxFrDxJsSgCHUvhI0MkSYKEhARDCAokQqV8grHv/U1Lly40FsKOn78SR45uBf1Bk1UI14w3sSeriACRhQRbX17RhRrFGMhMMqO/iF++rNne8vFisUiTz/9HVAFtYgaRE2iXUFUAMEgGENL1MZAYAVjDcYYrBGswJHRYxw9erR3AD322KMcPPiJWDVIC5Bg0MTBY/VsqKgVA0QwxmCsxMuAmIDPjRzuHUCPHhkB7wGDqEVoxh8bZyrVLS62ER0lgSdIDEviePTt49/tHUBf/sqxto8TFAE1qBdQRRMeKNg2CDG3zTlEJHa9gcGh3gGUz2VacFrJMymBtFnrtHxNkaROUzZOb029zmnvAArrYZvPSPJTXO+0fpcYDm1ZrAnIew9bYOX68r3Ti91330c3xKMK4kBAVZIg066NGE2zQPOJG3rjkisGBSpr5d5R0Nmz7yQgDJimWgATR2GNK8K2+qd1A14VpwnMOFSDCtVqDwF64423EDEYC8aCWEGSnN462uSIbKSuJKArgtdkJddP/umPvQPo0qUJrl+/SXW9Tr3hibzD4fHi8aJgFBXFJ6lMNQ7a2lSOSpLRBPWe8soi587+rXdi0NzcHK++eoqvf+Ob5HJZVH1c/BlBxGCtIQgsgQ0IggBjHdZ6MkGAFYs1zWo6bknevvRO7/ViJ0/+mWw2RxQ5nFMadUdY99RqDWq1iFrNUQvjcy5yqHfgHahrBe1mMfnSiy/23rhjamqKy/+YwHvFGIuxBiuCTfosY8AYaalKRDatpp0/f55Tp071HqBGo8GZM39p/cHWBgSZDNYGsULEEARB23VLEASbjiCcOPEKURT13jwIIJ/P89prr7N3+OOsrq4yO3uT4eGPsXv3birlMrVajT179yAo1WoVEWFwcJC1tTUGBgbw3nPo0GeYn5/vGKCODu3r9TqTk1dALPPztymXKywsLLBz5y7CWo3Kepmhfxc59NlDlBNgpVKJXC5HEARcvXqlo3A6Dsh7z9jYGKNf+CJ9fX3k83nCsIaLHPm+PlwUMTt7k0KhQH9/P9lsFhMPiNixYwfPPXeaTlvHH/tMTk6ysLDAvn37McbQ39+PiBAEAZlMlgcefIDAGrLZLEEQEAQWYyx37tzhzJm/dhxQxx8cLi4ucuWfl4miCO89zrnW8j4+tiWtpFhU3n13ghs3bvQ+oFhFVxExm6aGze4rhtOe4uN73n77bDe22h1AExMTeB+14LQmYSKYtronBhQ/3Th37tz2ARSGIc65uOdqgZDWqLU5h26er9frrKysbh9A3nvCsLYJzkZhJq2xUPN8FDnK5bXtA2h1dZWl0hKqmjw03DIwU2kL0srMzAyVSqUrgCzwy2642NJSiZGRw0QuzmaqPhlrxM2qcxGNRoP19QrPPPNDrl271hVAXXv9ZXx8nMMjIxQH+vn0pz7JWqVCqbRMoVDgoYceZO+ePayU1/jPzBwXL17s1ja79wJVJpNh965dhNUKg4U84iMW3r/F6tIiRh35XIYoDFkqLVKv17cfIICP3H8/i0srvD+/EI89ggxOIaw3qK6vU1peZqA4RKFQ6Noeu+ZizjlWV1eJoqg1KVxZWcF5B3iyuQCvG2OQbamgmf/OIGLiush7crksmSBA1beeYoRh2NH5zz0DyHtPLawBirUW9T5uWjMZMpm4UfXeEUWNTXXStlLQ/Pw8LqrTqDew1sZqqsVqajTqhLUatWqVarXatT12pQ5qr4eeeOKrTE29x9raGoE19BcKeOe4des2mVwfv3r+eaanp7sGqOMvcW61gYEBnv35L9i5a5ihwQGGikWKxSKqjh//5Edda1LbTbu99u3bpy+9fEL/fuGyTl6f1uvvTeuxY8f0XtibqKb/FX7PBukUUAooBZQCShGkgFJAKaAuWrPVSAvGu8ER0VRBH9LFtJszl3tVPWkM+j+DdKqiLeq5m4K2PaR2OO1Z7K73bqfMthXMhwG0LUB9EJim/W8AM8+zBbXVKp8AAAAASUVORK5CYII=",
				pngalignment: 'center:bottom',
			},
			steps: [{ down: [{ actionId: 'power', options: { powerAction: 'toggle' } }] }],
			feedbacks: [{ feedbackId: 'power', style: { text: 'off', color: ColorBlack, bgcolor: ColorGreen } }],
		}
		presets['powerOn'] = {
			type: 'button',
			category: 'General',
			name: 'Power On',
			style: {
				text: 'Power\non',
				size: '14',
				alignment: 'center:center',
				color: ColorBlack,
				bgcolor: ColorGreen,
			},
			steps: [{ down: [{ actionId: 'power', options: { powerAction: 'on' } }] }],
			feedbacks: [{ feedbackId: 'power', style: { color: ColorWhite, bgcolor: ColorBlack } }],
		}
		presets['powerOff'] = {
			type: 'button',
			category: 'General',
			name: 'Power Off',
			style: {
				text: 'Power\noff',
				size: '14',
				alignment: 'center:center',
				color: ColorWhite,
				bgcolor: ColorRed,
			},
			steps: [{ down: [{ actionId: 'power', options: { powerAction: 'off' } }] }],
			feedbacks: [{ feedbackId: 'power', isInverted: true, style: { bgcolor: ColorBlack } }],
		}

		presets['brightness'] = {
			type: 'button',
			category: 'Light',
			name: 'Brightness',
			style: {
				text: 'Brightness\n\n$(shelly_duo_test:brightness) %',
				size: '14',
				alignment: 'center:bottom',
				color: ColorWhite,
				bgcolor: ColorBlack,
			},
			steps: [
				{ down: [{ actionId: 'brightness', options: { brightness: '0' } }] },
				{ down: [{ actionId: 'brightness', options: { brightness: '50' } }] },
				{ down: [{ actionId: 'brightness', options: { brightness: '100' } }] }
			],
			feedbacks: [],
		}
		presets['brightnessIncrease'] = {
			type: 'button',
			category: 'Light',
			name: 'Brightness Increase',
			style: {
				text: 'Brightness\\n+',
				size: '14',
				alignment: 'center:center',
				color: ColorWhite,
				bgcolor: ColorBlack,
			},
			steps: [{ down: [{ actionId: 'brightnessChange', options: { delta: 10 } }] }],
			feedbacks: [],
		}
		presets['brightnessDecrease'] = {
			type: 'button',
			category: 'Light',
			name: 'Brightness Decrease',
			style: {
				text: 'Brightness\\n-',
				size: '14',
				alignment: 'center:center',
				color: ColorWhite,
				bgcolor: ColorBlack,
			},
			steps: [{ down: [{ actionId: 'brightnessChange', options: { delta: -10 } }] }],
			feedbacks: [],
		}

		presets['white'] = {
			type: 'button',
			category: 'Light',
			name: 'White',
			style: {
				text: 'White\n\n$(shelly_duo_test:white) %',
				size: '14',
				alignment: 'center:bottom',
				color: ColorWhite,
				bgcolor: ColorBlack,
			},
			steps: [
				{ down: [{ actionId: 'white', options: { white: '0' } }] },
				{ down: [{ actionId: 'white', options: { white: '50' } }] },
				{ down: [{ actionId: 'white', options: { white: '100' } }] }
			],
			feedbacks: [],
		}
		presets['whiteIncrease'] = {
			type: 'button',
			category: 'Light',
			name: 'White Increase',
			style: {
				text: 'White\\n+',
				size: '14',
				alignment: 'center:center',
				color: ColorWhite,
				bgcolor: ColorBlack,
			},
			steps: [{ down: [{ actionId: 'whiteChange', options: { delta: 10 } }] }],
			feedbacks: [],
		}
		presets['whiteDecrease'] = {
			type: 'button',
			category: 'Light',
			name: 'White Decrease',
			style: {
				text: 'White\\n-',
				size: '14',
				alignment: 'center:center',
				color: ColorWhite,
				bgcolor: ColorBlack,
			},
			steps: [{ down: [{ actionId: 'whiteChange', options: { delta: -10 } }] }],
			feedbacks: [],
		}

		presets['colorTemp'] = {
			type: 'button',
			category: 'Light',
			name: 'Color Temperatur',
			style: {
				text: 'Temp\n\n$(shelly_duo_test:temp) K',
				size: '14',
				alignment: 'center:bottom',
				color: ColorWhite,
				bgcolor: ColorBlack,
			},
			steps: [
				{ down: [{ actionId: 'colorTemp', options: { colorTemp: '2700' } }] },
				{ down: [{ actionId: 'colorTemp', options: { colorTemp: '4600' } }] },
				{ down: [{ actionId: 'colorTemp', options: { colorTemp: '6500' } }] }
			],
			feedbacks: [],
		}
		presets['colorTempIncrease'] = {
			type: 'button',
			category: 'Light',
			name: 'Color Temperatur Increase',
			style: {
				text: 'Temp\\n+',
				size: '14',
				alignment: 'center:center',
				color: ColorWhite,
				bgcolor: ColorBlack,
			},
			steps: [{ down: [{ actionId: 'colorTempChange', options: { delta: 100 } }] }],
			feedbacks: [],
		}
		presets['colorTempDecrease'] = {
			type: 'button',
			category: 'Light',
			name: 'Temperatur Decrease',
			style: {
				text: 'Temp\\n-',
				size: '14',
				alignment: 'center:center',
				color: ColorWhite,
				bgcolor: ColorBlack,
			},
			steps: [{ down: [{ actionId: 'colorTempChange', options: { delta: -100 } }] }],
			feedbacks: [],
		}

		presets['light'] = {
			type: 'button',
			category: 'Light',
			name: 'Light',
			style: {
				text: 'Light',
				size: '7',
				alignment: 'left:bottom',
				color: ColorWhite,
				bgcolor: ColorBlack,
			},
			steps: [],
			feedbacks: [{ feedbackId: 'light' }],
		}
		presets['meter'] = {
			type: 'button',
			category: 'Light',
			name: 'Meter',
			style: {
				text: 'Meter',
				size: '7',
				alignment: 'left:bottom',
				color: ColorWhite,
				bgcolor: ColorBlack,
			},
			steps: [],
			feedbacks: [{ feedbackId: 'meter' }],
		}

	return presets
}
*/

}
